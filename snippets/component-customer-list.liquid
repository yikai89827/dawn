{% doc %}
  产品卡片列表组件 - 显示所有产品的卡片式列表

  @param {collection} collection - 要显示的产品集合

  @param {number} [limit=12] - 显示的产品数量限制
{% enddoc %}
<div class="card-list">
  {% for product in collections.all.products limit: limit offset: offset %}
    {% comment %} {% assign showItem = product.tags.some(v=>v===tag) %} {% endcomment %}
    {% comment %}
      {{ product.tags | json }}
      ["Accessories","BACKLESS TOP","Best Sellers","Bottoms","Coats","Customized","Dresses","HALTER NECK","HALTER TOP BLACK","New","Tops"]
    {% endcomment %}
    {% comment %}
      {% if 1 %}
      {% if type == 13 %}/pages/details?index={{forloop.index0}}{% else %}
      {% endif %}
      {% endif %}
    {% endcomment %}
    <div class="product-card" data-product-id="{{ product.id }}">
      <a
        href="{{ product.url }}"
        class="product-card__link"
      >
        <div class="product-card__image">
          <div class="product-card__image-inner">
            {{
              product.featured_image
              | image_url: width: 300, height: 300, crop: 'center'
              | image_tag: loading: 'lazy', class: 'product-card__img'
            }}
            {% if tag contains 'new' %}
              <span class="product-tag product-tag--new">NEW</span>
            {% endif %}
            {% if tag contains 'Best Sellers' %}
              <span class="product-tag product-tag--hot">HOT</span>
            {% endif %}
          </div>
        </div>
        <div class="product-card__info">
          <h3 class="product-card__title">{{ product.title }}</h3>
          <div class="product-card__description">
            {{ product.description | strip_html | truncate: 100 }}
          </div>
          <div class="product-card__price">
            {{ product.price | money }}
          </div>
        </div>
      </a>
    </div>
  {% endfor %}
</div>

{% style %}
  .card-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    padding: 20px;
  }

  .product-card {
    border: 1px solid #e1e1e1;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease;
  }

  .product-card:hover {
    transform: translateY(-5px);
  }

  .product-card__image {
    position: relative;
    overflow: hidden;
    background: #f5f5f5;
    padding-top: 100%;
  }

  .product-tag {
    position: absolute;
    top: 10px;
    right: 10px;
    padding: 3px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: bold;
    color: white;
    z-index: 1;
  }

  .product-tag--new {
    background-color: #4caf50;
  }

  .product-tag--hot {
    background-color: #f44336;
  }
  .product-card__image-inner {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  .product-card__img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  .product-card:hover .product-card__img {
    transform: scale(1.05);
  }

  .product-card__info {
    padding: 15px;
  }

  .product-card__title {
    margin: 0 0 5px;
    font-size: 16px;
  }

  .product-card__description {
    margin: 0 0 8px;
    font-size: 14px;
    color: #666;
    line-height: 1.4;
  }

  .product-card__price {
    font-weight: bold;
    color: #d82c32;
  }
  .product-card__link {
    text-decoration: none;
    color: inherit;
  }
{% endstyle %}

{% javascript %}
  document.querySelectorAll('.product-card').forEach((card) => {
    card.addEventListener('click', function (e) {
      if (!e.target.closest('.product-card__link')) {
        const productId = this.dataset.productId;
        // 可以在这里添加额外的点击逻辑
        this.querySelector('.product-card__link').click();
      }
    });
  });
{% endjavascript %}
